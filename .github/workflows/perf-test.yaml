name:  Performance Tests

on:
  workflow_dispatch: # testing only, trigger manually to test it works
  push:
  pull_request:
    branches:
      - main

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          repository: 'guacsec/guac'
          ref: 'main'
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          repository: 'guacsec/guac-data'
          ref: 'main'
          path: 'guac-data'
      - name: Set up Go
        uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
      - uses: docker-practice/actions-setup-docker@master
        timeout-minutes: 12
      - run: |
          #!/usr/bin/env bash
          set -euo pipefail
          make build
          docker build -f dockerfiles/Dockerfile.guac-cont -t local-organic-guac .
          docker build -f dockerfiles/Dockerfile.healthcheck -t local-healthcheck .
      - run: docker compose up -d
      - id: run_compose
        run: |
          #!/usr/bin/env bash
          set -euo pipefail
          echo "Running performance tests..."
          echo -e "\tDocker Compose"
          start=$(date -u +%s)
          ./bin/guacone collect files ./guac-data/docs >/dev/null 2>&1
          end=$(date -u +%s)
          elapsed_time=$((end - start))

          printf "%-15s%-20s%s seconds\n" "Performance" "Docker Compose" "$elapsed_time"
          echo "ELAPSED_COMPOSE=$elapsed_time" >> $GITHUB_OUTPUT
      - run: docker compose up -d

#      - name: Run helm unittest
#        run: |
#          helm plugin install https://github.com/quintush/helm-unittest --version 0.2.11
#          helm unittest charts/guac -3
#
      - name: Install Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
        with:
           version: 'v3.11.2'
 
      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4.5.0
        with:
          python-version: '3.9'
          check-latest: true
 
 #      - name: Set up chart-testing
 #        uses: helm/chart-testing-action@afea100a513515fbd68b0e72a7bb0ae34cb62aec # v2.3.1
 
      - name: Create kind cluster
        uses: helm/kind-action@d8ccf8fb623ce1bb360ae2f45f323d9d5c5e9f00 # v1.5.0
        # if: steps.list-changed.outputs.changed == 'true'
 
      - name: Set up kubectl
        uses: azure/setup-kubectl@901a10e89ea615cf61f57ac05cecdf23e7de06d8 # v3.2
        with:
           version: 'v1.26.0'
        id: install

      - name: Deploy Helm Chart
        run: |
          helm repo add kusaridev https://kusaridev.github.io/helm-charts
          helm repo update
          helm install guac kusaridev/guac --wait
          kubectl get pod
 
      - id: run_helm
        run: |
          echo "Running performance tests..."
          echo -e "\tHelm"
          start=$(date -u +%s)
          ./bin/guacone collect files ./guac-data/docs >/dev/null 2>&1
          end=$(date -u +%s)
          elapsed_time=$((end - start))

          printf "%-15s%-20s%s seconds\n" "Performance" "Helm" "$elapsed_time"
          echo "ELAPSED_HELM=$elapsed_time" >> $GITHUB_OUTPUT
      - run: |
          echo -e "\n\n\n"
          printf "%-15s%-20s%s\n" "Test" "Deployment Env" "Time"
          printf "%-15s%-20s%s\n" "----" "--------------" "----"
          printf "%-15s%-20s%s seconds\n" "Performance" "Docker Compose" "$ELAPSED_COMPOSE"
          printf "%-15s%-20s%s seconds\n" "Performance" "Helm" "$elapsed_helm"
        env:
          ELAPSED_COMPOSE: ${{ steps.run_compose.outputs.ELAPSED_COMPOSE }}
          ELAPSED_HELM: ${{ steps.run_helm.outputs.ELAPSED_HELM }}

 #
 #      - name: Run chart-testing (install)
 #        run: ct install --all --helm-extra-args --timeout=600s
 #        # if: steps.list-changed.outputs.changed == 'true'
 #